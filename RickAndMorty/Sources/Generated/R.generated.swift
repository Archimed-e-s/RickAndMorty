//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var font: font { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func font(bundle: Foundation.Bundle) -> font {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.font.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 5 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `BlackCollectionViewColor`.
    var blackCollectionViewColor: RswiftResources.ColorResource { .init(name: "BlackCollectionViewColor", path: [], bundle: bundle) }

    /// Color `DetailCellColor`.
    var detailCellColor: RswiftResources.ColorResource { .init(name: "DetailCellColor", path: [], bundle: bundle) }

    /// Color `TabBarBackgroundColor`.
    var tabBarBackgroundColor: RswiftResources.ColorResource { .init(name: "TabBarBackgroundColor", path: [], bundle: bundle) }

    /// Color `WhiteCollectionViewColor`.
    var whiteCollectionViewColor: RswiftResources.ColorResource { .init(name: "WhiteCollectionViewColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 10 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `addedFavourites`.
    var addedFavourites: RswiftResources.ImageResource { .init(name: "addedFavourites", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backButton`.
    var backButton: RswiftResources.ImageResource { .init(name: "backButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `backWhiteButton`.
    var backWhiteButton: RswiftResources.ImageResource { .init(name: "backWhiteButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `background`.
    var background: RswiftResources.ImageResource { .init(name: "background", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `downArrow`.
    var downArrow: RswiftResources.ImageResource { .init(name: "downArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `nextButton`.
    var nextButton: RswiftResources.ImageResource { .init(name: "nextButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `nextWhiteButton`.
    var nextWhiteButton: RswiftResources.ImageResource { .init(name: "nextWhiteButton", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notAddedFavourites`.
    var notAddedFavourites: RswiftResources.ImageResource { .init(name: "notAddedFavourites", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `planetImage`.
    var planetImage: RswiftResources.ImageResource { .init(name: "planetImage", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `showDetails`.
    var showDetails: RswiftResources.ImageResource { .init(name: "showDetails", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.font` struct is generated, and contains static references to 2 fonts.
  struct font: Sequence {
    let bundle: Foundation.Bundle

    /// Font `Inter-Bold`.
    var interBold: RswiftResources.FontResource { .init(name: "Inter-Bold", bundle: bundle, filename: "InterBold.otf") }

    /// Font `Inter-Regular`.
    var interRegular: RswiftResources.FontResource { .init(name: "Inter-Regular", bundle: bundle, filename: "InterRegular.otf") }

    func makeIterator() -> IndexingIterator<[RswiftResources.FontResource]> {
      [interBold, interRegular].makeIterator()
    }
    func validate() throws {
      for font in self {
        if !font.canBeLoaded() { throw RswiftResources.ValidationError("[R.swift] Font '\(font.name)' could not be loaded, is '\(font.filename)' added to the UIAppFonts array in this targets Info.plist?") }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 2 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `InterBold.otf`.
    var interBoldOtf: RswiftResources.FileResource { .init(name: "InterBold", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `InterRegular.otf`.
    var interRegularOtf: RswiftResources.FileResource { .init(name: "InterRegular", pathExtension: "otf", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}